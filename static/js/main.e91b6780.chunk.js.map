{"version":3,"sources":["components/chart.js","components/collegecard.js","components/App.js","index.js"],"names":["Chart","props","data","labels","datasets","label","backgroundColor","options","title","display","text","CollegeCard","console","log","className","name","noOfStudents","state","yearFounded","coursesOffered","App","chartTabHandler","setState","isCharts","isSearch","isList","isSearchResult","searchTabHandler","ListTabHandler","searchHandler","e","preventDefault","target","value","requestOptions","method","headers","body","JSON","stringify","fetch","then","res","json","result","searchResult","error","collegeList","statesList","courseList","stateData","courseData","stateList","this","onClick","onSubmit","type","placeholder","map","college","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e91b6780.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Doughnut } from 'react-chartjs-2'\r\n\r\nfunction Chart (props) {\r\n  const data = {\r\n    labels: props.labels,\r\n    datasets: [\r\n      {\r\n        label: props.label,\r\n        data: props.data,\r\n        backgroundColor: [\r\n          'rgba(255, 99, 132, 1)',\r\n          'rgba(255, 205, 86, 1)',\r\n          'rgba(54, 162, 235, 1)',\r\n          'rgba(255, 159, 64, 1)',\r\n        //   'rgba(153, 102, 255, 1)'\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n\r\n  const options = {\r\n    title: {\r\n      display: true,\r\n      text: props.label\r\n    }\r\n  }\r\n\r\n  return <Doughnut data={data} options={options} />\r\n}\r\n\r\nexport default Chart;","import React from 'react';\r\nimport '../style.css';\r\n\r\nfunction CollegeCard(props) {\r\n    console.log(props);\r\n  return (\r\n    <div className=\"collegecard\">\r\n        <div className=\"collegename\">\r\n            {props.name}\r\n        </div>\r\n        <div className=\"noOfstudents\">\r\n            {props.noOfStudents}\r\n        </div>\r\n        <div className=\"collegestate\">\r\n            {props.state}\r\n        </div>\r\n        <div className=\"yearfounded\">\r\n            {props.yearFounded}\r\n        </div>\r\n        <div className=\"collegecourse\">\r\n            {props.coursesOffered}\r\n        </div>\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n\r\nexport default CollegeCard;","import '../style.css';\nimport React from 'react';\nimport Chart from './chart';\nimport CollegeCard from './collegecard';\nclass App extends React.Component {\n\n  constructor() {\n    super();\n    // defining the state at first\n    this.state = \n    { collegeList: [],\n      statesList:[],\n      courseList:[],\n      stateData:[],\n      courseData:[],\n      searchResult:{},\n      isCharts:true,\n      isSearch:false,\n      isList:false,\n      isSearchResult:false\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"component mounted\");\n    fetch(\"http://localhost:8000/collegeList\")\n      .then(res => res.json())\n      .then(\n        (result) => {\n          this.setState({\n            // isLoaded: true,\n            collegeList: result.data.collegeList,\n            stateList:result.data.stateList,\n            stateData:result.data.stateData,\n            courseList:result.data.courseList,\n            courseData:result.data.courseData,\n\n          });\n          console.log(result.data);\n        },\n        // Note: it's important to handle errors here\n        // instead of a catch() block so that we don't swallow\n        // exceptions from actual bugs in components.\n        (error) => {\n          // this.setState({\n            // isLoaded: true,\n            console.log(error);\n          // });\n        }\n      )\n  }\n\n   chartTabHandler=()=>{\n    this.setState({\n     isCharts:true,\n     isSearch:false,\n     isList:false,\n     isSearchResult:false\n    });\n   }\n\n   searchTabHandler=()=>{\n    this.setState({\n     isSearch:true,\n     isCharts:false,\n     isList:false,\n     isSearchResult:false\n    });\n   }\n\n   ListTabHandler=()=>{\n    this.setState({\n     isCharts:false,\n     isSearch:false,\n     isList:true,\n     isSearchResult:false\n    });\n   }\n\n\n   searchHandler=(e)=>{\n    e.preventDefault();\n     console.log(e.target.name.value);\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ name: e.target.name.value })\n  };\n  fetch('http://localhost:8000/collegeDetails', requestOptions)\n  .then(res => res.json())\n  .then(\n    (result) => {\n      this.setState({\n        searchResult: result.data,\n        isSearchResult:true\n      });\n      console.log(result.data);\n       },\n   \n          (error) => {\n           console.log(error);\n      \n        }\n    )\n    \n   }\n\n  render(){\n    const isSearch=this.state.isSearch;\n    const isCharts=this.state.isCharts;\n    const isList=this.state.isList;\n  return (\n    <div className=\"App\">\n      <div className=\"heading\">\n      <h1  >COLLEGE APP</h1>\n      </div>\n\n      <div className=\"tabs\">\n        <div className=\"tab\" onClick={this.chartTabHandler}>Charts</div>\n      \n      <div className=\"tab\" onClick={this.searchTabHandler}>Search</div>\n      \n      <div className=\"tab\" onClick={this.ListTabHandler}>List</div>\n      </div>\n      {isCharts && \n       <div className=\"charts\">\n       <div className=\"chart\">\n         <Chart \n         labels={this.state.stateList}\n         data={this.state.stateData}\n         label={\"State-wise Chart\"}       \n         />\n       </div>\n       <div className=\"chart\">\n         <Chart\n         labels={this.state.courseList}\n         data={this.state.courseData}\n         label={\"Course-wise Chart\"}\n         />\n       </div>\n    </div>\n      }\n      \n      {\n        isSearch && \n        <div className=\"search\">\n          <h2>SEARCH HERE!</h2>\n          <div className=\"form\">\n          <form className=\"mainform\" onSubmit={this.searchHandler}>\n          <input className=\"input\" type=\"text\" name=\"name\" placeholder=\"Search College....\"/>\n          <input className=\"submit\" type=\"submit\" value=\"Search\"/>\n        </form>\n          </div>\n        \n        \n        </div>\n      }\n      {\n        this.state.isSearchResult &&\n        <div className=\"isSearchResult\">\n          <div className=\"searchResult listtitles\"> \n            <CollegeCard \n             name={\"College Name\"}\n             state={\"State\"}\n             yearFounded={\"Year Founded\"}\n             coursesOffered={\"Courses Offered\"}\n             noOfStudents={\"No. Of Students\"}\n             />\n             </div>\n        <div className=\"searchResult\">\n         <CollegeCard \n        \n         name={this.state.searchResult.name}\n         state={this.state.searchResult.state}\n         yearFounded={this.state.searchResult.yearFounded}\n         coursesOffered={\"CSE IT ECE MECHANICAL CIVIL\"}\n         noOfStudents={\"100\"}\n          />\n        </div>\n        </div>\n\n      }\n\n      {\n        isList && \n        <div className=\"list\">\n          <div className=\"listtitles\"> \n            <CollegeCard \n             name={\"College Name\"}\n             state={\"State\"}\n             yearFounded={\"Year Founded\"}\n             coursesOffered={\"Courses Offered\"}\n             noOfStudents={\"No. Of Students\"}\n             />\n          </div>\n          {this.state.collegeList.map((college) =>(\n            <CollegeCard \n            name={college.name}\n            state={college.state}\n             yearFounded={college.yearFounded}\n             coursesOffered={\"CSE, IT , ECE, MECHANICAL, CIVIL\"}\n             noOfStudents={\"100\"}\n            />\n          ))}\n        </div>\n      }\n\n\n      \n    </div>\n  );\n }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n    <App />\n  ,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}